/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphicinterface;

import book.Book;
import book.BookDao;
import comment.Comment;
import comment.CommentDao;
import java.io.InputStream;
import java.text.ParseException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import repository.DbConnection;
import user.User;
import user.UserDao;

/**
 *
 * @author Claudio Alcantara &lt;claudio.alcantara at ifnmg.edi.br&gt;
 */
public class ListarLivros extends javax.swing.JInternalFrame {
    MaskFormatter mfdata;
    private static ListarLivros instancia;
    private TelaPrincipal telaPrincipal;
    private List<Book> books;
    private int type;
    User user;
    /**
     * Creates new form ListarLivros
     */
    private ListarLivros(TelaPrincipal telaPrincipal, int type, User user) {
        this.telaPrincipal = telaPrincipal;
        this.type = type;
        this.user = user;
        try {
            mfdata = new MaskFormatter("##/##/####");
        } catch (ParseException ex) {
            System.out.println(ex);
        }
        initComponents();
        if(type == 0){
            btnListLivrosEditar.setVisible(false);
            ListLivrosGerarRelatorio.setVisible(false);
        }
        if(type == 3){
            btnlistLisvrosComentar.setVisible(false);
            btnListLivrosEditar.setVisible(false);
            lstListLivrosAdComent.setVisible(false);
        }
        if(type == 2){
            btnlistLisvrosComentar.setVisible(false);
            ListLivrosGerarRelatorio.setVisible(false);
        }
        else
            
        loadTable();
    }
    
    public static ListarLivros getInstance(TelaPrincipal telaPrincipal, int type, User user) {
        if (instancia == null) {
            instancia = new ListarLivros(telaPrincipal, type, user);
        }
        return instancia;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListLivros = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstListLivrosComent = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        btnlistLisvrosComentar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstListLivrosAdComent = new javax.swing.JTextArea();
        btnListLivrosEditar = new javax.swing.JButton();
        btnListLivrosSair = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        ListLivrosGerarRelatorio = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel1.setText("LIVROS");

        tblListLivros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Titulo", "Autor", "Edição", "Páginas", "Ano"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListLivros.getSelectionModel().addListSelectionListener(new TableSelectionListener());
        jScrollPane1.setViewportView(tblListLivros);

        jScrollPane2.setViewportView(lstListLivrosComent);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Comentarios");

        btnlistLisvrosComentar.setText("Comentar");
        btnlistLisvrosComentar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlistLisvrosComentarActionPerformed(evt);
            }
        });

        lstListLivrosAdComent.setColumns(20);
        lstListLivrosAdComent.setRows(5);
        jScrollPane3.setViewportView(lstListLivrosAdComent);

        btnListLivrosEditar.setText("Editar");
        btnListLivrosEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListLivrosEditarActionPerformed(evt);
            }
        });

        btnListLivrosSair.setText("Sair");
        btnListLivrosSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListLivrosSairActionPerformed(evt);
            }
        });

        jButton1.setText("Recarregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ListLivrosGerarRelatorio.setText("Gerar Relatorio");
        ListLivrosGerarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListLivrosGerarRelatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(322, 322, 322)
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 251, Short.MAX_VALUE)
                                    .addComponent(jButton1))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addContainerGap(41, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ListLivrosGerarRelatorio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnListLivrosEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnListLivrosSair))
                    .addComponent(btnlistLisvrosComentar))
                .addGap(59, 59, 59))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnlistLisvrosComentar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnListLivrosEditar)
                    .addComponent(btnListLivrosSair)
                    .addComponent(ListLivrosGerarRelatorio))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnlistLisvrosComentarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlistLisvrosComentarActionPerformed
        Comment comment = new Comment();
        if(!lstListLivrosAdComent.getText().trim().isEmpty()){
            comment.setBook(books.get(tblListLivros.getSelectedRow()));
            comment.setComment(lstListLivrosAdComent.getText());
            comment.setUser(user);
            comment.setId(new CommentDao().saveOrUpdate(comment));
            lstListLivrosAdComent.setText("");
        }
    }//GEN-LAST:event_btnlistLisvrosComentarActionPerformed

    private void btnListLivrosSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListLivrosSairActionPerformed
        dispose();
        instancia = null;
    }//GEN-LAST:event_btnListLivrosSairActionPerformed

    private void btnListLivrosEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListLivrosEditarActionPerformed
        CadastrarAtualizarLivro cadastrarAtualizarLivro = CadastrarAtualizarLivro.getInstance(telaPrincipal, books.get(tblListLivros.getSelectedRow()));
        telaPrincipal.getPrincipalPnl().add(cadastrarAtualizarLivro);
        cadastrarAtualizarLivro.setVisible(true);
        cadastrarAtualizarLivro.toFront();
        
    }//GEN-LAST:event_btnListLivrosEditarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        loadTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ListLivrosGerarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListLivrosGerarRelatorioActionPerformed
        
        try (InputStream in = getClass().getResourceAsStream("/ComentariosLivros.jasper")) {
            // Crie um mapa para armazenar os parâmetros e adicione-os conforme necessário
            Map<String, Object> parameters = new HashMap<>();
            parameters.put("idbook", books.get(tblListLivros.getSelectedRow()).getId());

            // Preencha o relatório com os parâmetros
            JasperPrint jasperprint = JasperFillManager.fillReport(in, parameters, DbConnection.getConnection());

            // Restante do código para exibir o relatório
            JasperViewer jasperViewer = new JasperViewer(jasperprint, false);
            JDialog dialog = new JDialog(telaPrincipal);
            dialog.setContentPane(jasperViewer.getContentPane());
            dialog.setSize(jasperViewer.getSize());
            dialog.setTitle(title);
            dialog.setModal(true);
            dialog.setVisible(true);
        } catch (Exception ex) {
            System.out.println(ex);
        }
           
    }//GEN-LAST:event_ListLivrosGerarRelatorioActionPerformed

    private void loadTable(){
        books = new BookDao().findAll();
        DefaultTableModel model = (DefaultTableModel)tblListLivros.getModel();
        model.setNumRows(0);
        books.forEach(book -> {
            model.addRow(new Object[]{
                book.getId(),
                book.getTitle(),
                book.getAuthors(),
                book.getEdition(),
                book.getPages(),
                book.getYear()
            });
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ListLivrosGerarRelatorio;
    private javax.swing.JButton btnListLivrosEditar;
    private javax.swing.JButton btnListLivrosSair;
    private javax.swing.JButton btnlistLisvrosComentar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea lstListLivrosAdComent;
    private javax.swing.JList<String> lstListLivrosComent;
    private javax.swing.JTable tblListLivros;
    // End of variables declaration//GEN-END:variables
    
    private class TableSelectionListener implements ListSelectionListener {
    @Override
    public void valueChanged(ListSelectionEvent e) {
        List<Comment> comments;
        if (!e.getValueIsAdjusting()) {
            int selectedRow = tblListLivros.getSelectedRow();
            if (selectedRow != -1) {
                comments = new CommentDao().findByBookId(books.get(tblListLivros.getSelectedRow()).getId());
                DefaultListModel<String> commentListModel = new DefaultListModel<>();
                lstListLivrosComent.setModel(commentListModel);
                //String selectedItem = tblListLivros.getValueAt(selectedRow, 0).toString();
                comments.forEach(comment -> {
                    commentListModel.addElement(new UserDao().findById(comment.getUser().getId()).getName() + ": " + comment.getComment());
                }); //tblListLivros.setModel(newModel);
            }
        }
    }

        
    }

}

